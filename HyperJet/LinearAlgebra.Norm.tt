<#@ template hostspecific="false" language="C#" #>
namespace HyperJet;

using static HyperJet.MathD;

public static partial class LinearAlgebraD
{
<#
for (var size = 1; size <= 12; size++)
{
    var scalar = $"D{size}Scalar";
    var vector = $"D{size}Vector3";
    
    if (size > 1) {
#>

<#
    }
#>
    public static <#= scalar #> Norm(<#= vector #> v)
    {
        var squaredNorm = SquaredNorm(v);

        return Sqrt(squaredNorm);
    }
<#
}
#>

<#
for (var size = 1; size <= 12; size++)
{
    var scalar = $"DD{size}Scalar";
    var vector = $"DD{size}Vector3";
    
    if (size > 1) {
#>

<#
    }
#>
    public static <#= scalar #> Norm(<#= vector #> v)
    {
        var squaredNorm = SquaredNorm(v);

        return Sqrt(squaredNorm);
    }
<#
}
#>
}
