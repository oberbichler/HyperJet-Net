<#@ template hostspecific="false" language="C#" #>
namespace HyperJet;

using System;

public static partial class MathD
{
<#
for (var size = 1; size <= 12; size++)
{
    var scalar = $"D{size}Scalar";
    
    if (size > 1) {
#>

<#
    }
#>
    public static <#= scalar #> Pow(<#= scalar #> a, double b)
    {
        var tmp = Math.Pow(a.Constant, b - 1);

        var constant = tmp * a.Constant;
        var da = b * tmp;

        return <#= scalar #>.Forward(constant, da, a);
    }
<#
}
#>

<#
for (var size = 1; size <= 12; size++)
{
    var scalar = $"DD{size}Scalar";
    
    if (size > 1) {
#>

<#
    }
#>
    public static <#= scalar #> Pow(<#= scalar #> a, double b)
    {
        // > 2 times faster when precomputing these values
        var tmp1 = Math.Pow(a.Constant, b - 2);
        var tmp2 = tmp1 * a.Constant;
        
        var constant = tmp2 * a.Constant;
        var da = b * tmp2;
        var dada = b * (b - 1) * tmp1;

        return <#= scalar #>.Forward(constant, da, dada, a);
    }
<#
}
#>
}
